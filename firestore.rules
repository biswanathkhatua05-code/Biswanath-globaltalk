rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Global messages: Anyone authenticated can read, anyone can write their own messages.
    match /global_messages/{messageId} {
      allow read: if request.auth != null;
      // Rule for creating a new message.
      // The new message's userId must match the authenticated user's UID.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // No updates or deletes for global messages.
      allow update, delete: if false;
    }
    
    // Private chat sessions
    // The chatId is formatted as 'uid1_uid2' with UIDs sorted alphabetically.
    match /chat_sessions/{chatId}/{document=**} {
       // Allow read/write to the session doc or any message in its subcollections
       // only if the authenticated user's UID is part of the chatId.
       allow read, write: if request.auth != null && request.auth.uid in chatId.split('_');
    }

    // Random chat sessions pool
    match /random_chat_sessions_pool/{sessionId} {
       // Anyone can create a waiting session for themselves.
       allow create: if request.auth != null && request.resource.data.userId1 == request.auth.uid;
       
       // Allow reading the session document to check its status.
       allow read: if request.auth != null;
       
       // Allow a user to join a session (update) if it's 'waiting' and they are not the creator.
       allow update: if request.auth != null 
                      && resource.data.status == 'waiting' 
                      && request.resource.data.userId2 == request.auth.uid
                      && resource.data.userId1 != request.auth.uid;
       
       // Messages can be read/written only by the two participants of the session.
       match /messages/{messageId} {
          // We use get() to fetch the parent session document to check for participants.
          // This rule applies to both reading and creating messages.
          allow read, create: if request.auth != null &&
                               (request.auth.uid == get(/databases/$(database)/documents/random_chat_sessions_pool/$(sessionId)).data.user1.id ||
                                request.auth.uid == get(/databases/$(database)/documents/random_chat_sessions_pool/$(sessionId)).data.user2.id);
          allow update, delete: if false; // Don't allow editing/deleting messages.
       }
    }

    // Video call signaling documents
    // These are temporary. Allow any authenticated user to create/read/update/delete.
    match /video_calls/{callId}/{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
