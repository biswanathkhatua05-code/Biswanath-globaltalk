rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Checks if the requesting user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Checks if the user is a participant in a private chat.
    // Chat ID must be in the format 'uid1_uid2'.
    function isPrivateChatParticipant(chatId) {
      return isAuthenticated() && request.auth.uid in chatId.split('_');
    }

    // Checks if the user is a participant in a random chat.
    function isRandomChatParticipant(sessionId) {
      // Get the session document from the random chat pool.
      let sessionDoc = get(/databases/$(database)/documents/random_chat_sessions_pool/$(sessionId));
      // Check if the document exists and the user is either user1 or user2.
      // We safely check for userId2's existence before trying to access it.
      return isAuthenticated() && exists(/databases/$(database)/documents/random_chat_sessions_pool/$(sessionId)) &&
             (request.auth.uid == sessionDoc.data.userId1 || 
              (sessionDoc.data.userId2 != null && request.auth.uid == sessionDoc.data.userId2));
    }
    
    // --- Collection Rules ---

    // Global Messages: Anyone can read, only authenticated users can write.
    match /global_messages/{messageId} {
      allow read;
      allow create: if isAuthenticated();
      // Users shouldn't be able to update/delete global messages.
      allow update, delete: if false;
    }

    // Chat Sessions (Private Chats)
    match /chat_sessions/{chatId} {
      // Rules for the main chat document (if it were used).
      // A user can read/write if they are a participant.
      allow read, write: if isPrivateChatParticipant(chatId);

      // Rules for the messages subcollection within a private chat.
      match /messages/{messageId} {
        allow read, write: if isPrivateChatParticipant(chatId);
      }
    }
    
    // Random Chat Sessions Pool
    match /random_chat_sessions_pool/{sessionId} {
      // Anyone authenticated can create a new session to wait for a partner.
      allow create: if isAuthenticated();
      
      // Authenticated users can query the list to find a waiting partner.
      allow list: if isAuthenticated();
      
      // Only participants can read or update their own session.
      allow read, update: if isRandomChatParticipant(sessionId);
    }
    
    // Messages within a Random Chat
    match /random_chat_sessions_pool/{sessionId}/messages/{messageId} {
      // Only participants can read or write messages.
      allow read, write: if isRandomChatParticipant(sessionId);
    }

    // Video Call Signaling documents
    match /video_calls/{callId}/{document=**} {
      // For simplicity, any authenticated user can read/write signaling data.
      // This could be tightened to only allow participants of the callId.
      allow read, write, delete: if isAuthenticated();
    }
  }
}
