
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Global Messages: Anyone authenticated can read, only authenticated users can write their own messages.
    match /global_messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // allow update, delete: if false; // Generally, messages aren't updated or deleted by users
    }

    // Chat Sessions (for Private and Random chats)
    // chat_sessions/{chat_session_id}/messages/{message_id}
    match /chat_sessions/{chatSessionId}/messages/{messageId} {
      // Allow read/create if user is authenticated. In a real app, you would restrict this to only participants of the chat.
      // For this app's simplicity, any authenticated user can read/write messages to any session.
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Do not allow updates or deletes to messages by users for now
      // allow update, delete: if false;
    }

    // Random Chat Sessions Pool (the session document itself, not messages inside it)
    match /random_chat_sessions_pool/{sessionId} {
      allow read: if request.auth != null; // Authenticated users can read to find sessions
      allow create: if request.auth != null && request.resource.data.userId1 == request.auth.uid; // User can create a session for themselves
      allow update: if request.auth != null; // Simplified for development
      // allow delete: if request.auth != null; // Simplified for development
    }
    
    // Video Call Signaling
    match /video_calls/{callId} {
      allow read, write: if request.auth != null;
      
      match /offerCandidates/{candidateId} {
        allow read, write: if request.auth != null;
      }
      match /answerCandidates/{candidateId} {
        allow read, write: if request.auth != null;
      }
    }

  }
}
