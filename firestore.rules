
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users Collection
    // - Allow users to read their own profile.
    // - Allow any authenticated user to create their own profile.
    // - Allow users to update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Global Messages
    // - Allow any authenticated user to read global messages.
    // - Allow any authenticated user to write to the global chat, but only if the message is from them.
    match /global_messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Private Chat Sessions
    // - Allow read/write only if the requesting user is one of the participants in the chat.
    match /chat_sessions/{chatId} {
      allow read, write: if request.auth.uid in resource.data.participants;

      // Messages within a private chat
      match /messages/{messageId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chat_sessions/$(chatId)).data.participants;
      }
    }
    
    // Random Chat Sessions Pool
    // - Allow any authenticated user to read/write to the random chat pool.
    //   More complex rules could be added to prevent users from joining their own sessions.
    match /random_chat_sessions_pool/{sessionId} {
      allow read, write: if request.auth != null;

      // Messages within a random chat
      match /messages/{messageId} {
        allow read, write: if request.auth != null; // Basic rule, can be tightened
      }
    }

    // Videos, Comments, Likes (YouTube Clone Feature)
    // - Allow any authenticated user to read video/comment/like data.
    // - Allow create only if the data belongs to the authenticated user.
    match /videos/{videoId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == request.resource.data.creatorId;

      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.authorId;
      }

      match /likes/{userId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == userId;
      }
    }
  }
}
